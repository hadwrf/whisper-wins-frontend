generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model Auction {
  contractAddress String        @unique @map("contract_address")
  ownerAddress    String        @map("owner_address")
  nftAddress      String        @map("nft_address")
  tokenId         String        @map("token_id")
  status          AuctionStatus @default(NFT_TRANSFER_ADDRESS_PENDING) @map("status")
  createdAt       DateTime      @default(now()) @map("created_at")
  updatedAt       DateTime      @default(now()) @map("updated_at")
  bids            Bid[]

  @@map("auctions")
}

model Bid {
  id             Int       @id @default(autoincrement())
  status         BidStatus @default(ACTIVE) @map("status")
  createdAt      DateTime  @default(now()) @map("created_at")
  updatedAt      DateTime  @default(now()) @map("updated_at")
  bidderAddress  String    @map("bidder_address")
  auctionAddress String    @map("auction_address")
  amount         Float     @map("amount")
  l1Address      String    @map("l1_address")
  auction        Auction   @relation(fields: [auctionAddress], references: [contractAddress])

  @@map("bids")
}

model Notification {
  id          Int      @id @default(autoincrement())
  userAddress String   @map("user_address")
  message     String   @map("message")
  read        Boolean  @default(false) @map("read")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @default(now()) @map("updated_at")

  @@map("notifications")
}

enum AuctionStatus {
  NFT_TRANSFER_ADDRESS_PENDING
  NFT_TRANSFER_PENDING
  START_PENDING
  WINNER_CLAIM_PENDING
  IN_PROGRESS
  EARNING_CLAIM_PENDING
  ENDED
}

enum BidStatus {
  ACTIVE
  WINNER
  LOSER
}
